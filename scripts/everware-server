#!/usr/bin/env python3
import jupyterhub.handlers.pages as pages
import jupyterhub.handlers.base as base
from jupyterhub import app
from everware import SpawnHandler, UserSpawnHandler, HomeHandler
import sys
import warnings


CUSTOM_HANDLERS = [
    ('/hub/user/([^/]+)(/.*)?', UserSpawnHandler),
    ('/hub/home', HomeHandler),
    ('/hub/spawn', SpawnHandler)
]


class Everware(app.JupyterHub):
    name = 'everware'

    def init_handlers(self):
        super().init_handlers()
        self.add_handlers(CUSTOM_HANDLERS)

    def add_handlers(self, new_handlers, replace_existing=True):
        """Add new handlers.

        Parameters
        ----------
        handlers : list-like
            Contains tuples representing handlers: (url, handler[, init_args]).
        replace_existing : bool, optional(True)
            If True, old handlers will be overwritten by new ones on overlapping urls.
        """
        for index, handler in enumerate(self.handlers):
            for new_index, new_handler in enumerate(new_handlers):
                if handler[0] == new_handler[0]:
                    if replace_existing:
                        self.handlers[index] = new_handler
                    new_handlers.pop(new_index)
                    break
        if self.handlers[-1][0] == '(.*)':
            for handler in new_handlers:
                self.handlers.insert(-1, handler)
        else:
            for handler in new_handlers:
                self.handlers.append(handler)


main = Everware.launch_instance

if __name__ == "__main__":
    main(sys.argv)
